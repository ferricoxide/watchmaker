name: Build and test

on:
  # Run on demand
  workflow_dispatch:

  # Run pull requests against the default branch
  pull_request:
    branches: [main]

  # Run on push to default branch
  push:
    branches: [main]

concurrency:
  group: build-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.12"]
        os: ["ubuntu-latest"]
    steps:
      - name: Clone this git repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: requirements/*.txt

      - run: pip install -r requirements/pip.txt
      - run: pip install -r requirements/basics.txt

      - name: Set dev version
        if: github.event_name == 'pull_request'
        run: |
          ver=$(git show -s --format=%cd --date=format:'%Y%m%d%H%M%S')
          sed -i -E "s/^(version = )([0-9]+\.[0-9]+\.[0-9]+).*$/\1\2.dev$ver/" setup.cfg
          grep "version = " setup.cfg

      - name: Build package
        run: python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: dists
          path: dist/
          if-no-files-found: error
          retention-days: 1

  test:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        python-version: ["3.12"]
        os: ["ubuntu-latest"]
    steps:
      - name: Clone this git repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: requirements/*.txt

      - run: pip install -r requirements/pip.txt
      - run: pip install -r requirements/test.txt

      - name: Retrieve release distributions
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093
        with:
          name: dists
          path: dist/

      - name: Install package
        run: python -m pip install ./dist/watchmaker-*.whl
        shell: bash

      - name: Run tests
        run: pytest -vv tests

  lint:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        python-version: ["3.12"]
        os: ["ubuntu-latest"]
    steps:
      - name: Clone this git repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: requirements/*.txt

      - run: pip install -r requirements/pip.txt
      - run: pip install -r requirements/check.txt

      - name: Retrieve release distributions
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093
        with:
          name: dists
          path: dist/

      - name: Install package
        run: python -m pip install ./dist/watchmaker-*.whl

      - run: python setup.py check --strict --metadata
      - run: check-manifest
      - run: black --check .
      - run: flake8
      - run: pylint src/watchmaker

  docs:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        python-version: ["3.12"]
        os: ["ubuntu-latest"]
    steps:
      - name: Clone this git repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: requirements/*.txt

      - run: pip install -r requirements/pip.txt
      - run: pip install -r requirements/docs.txt

      - name: Retrieve release distributions
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093
        with:
          name: dists
          path: dist/

      - name: Install package
        run: python -m pip install ./dist/watchmaker-*.whl

      - run: sphinx-build -a -E -W --keep-going -b html docs dist/docs
      - run: sphinx-build -b doctest docs dist/docs
      - run: sphinx-build -b linkcheck docs dist/docs
